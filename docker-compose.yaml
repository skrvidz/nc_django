version: '3.9'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: nova_control_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"

  web:
    build:
      context: ../nc_django
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ../nc_django:/app
      - ../nc_django/media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=1

  flask-simulation:
    build:
      context: ../simulation_service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - OPC_UA_SERVER_URL=opc.tcp://opc-ua-server:4840
      - PYTHONUNBUFFERED=1

  opc-ua-server:
    build:
      context: ../opc_server
      dockerfile: Dockerfile
    ports:
      - "4840:4840"
    depends_on:
      - flask-simulation
    environment:
      - SIMULATION_URL=http://flask-simulation:5000
      - PYTHONUNBUFFERED=1

  rl-controller:
    build:
      context: ../rl_controller
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ../nova_control/data/agents:/app/data/agents
    depends_on:
      - flask-simulation
      - opc-ua-server
    environment:
      - OPC_UA_SERVER_URL=opc.tcp://opc-ua-server:4840
      - PYTHONUNBUFFERED=1
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"


  dash:
    build:
      context: ../nova_control
      dockerfile: Dockerfile
    volumes:
      - ../nova_control/data:/app/data
      - ../nc_django/media:/app/media
    ports:
      - "8050:8050"
    depends_on:
      - web
      - flask-simulation

volumes:
  postgres_data:
